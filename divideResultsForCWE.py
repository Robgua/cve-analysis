import math
from cmath import nan

import matplotlib.pyplot as plt
import pandas as pd


data = pd.read_csv('RepositoryeCommit.csv', sep='|',
                 names=['CVE', 'summary', 'CWE', 'Published date', 'Last update', 'CVSS', 'Impact confidentiality',
                        'Impact integrity', 'Impact availability', 'Product name', 'Vendor name', 'Url_repository',
                        'Commit_id', 'Url_trackers'], skiprows=1)

why = pd.read_csv('Risultati/risWhy.csv', sep='|',names=['CVE', 'Product', 'BF', 'E', 'NF', 'R', 'WR-OD', 'WR-OW', 'WR-OM','WR-M', 'PS-OW', 'PS-OM', 'PS-OY', 'PS-M',
                'W-H', 'W-M', 'W-L', 'PT_E', 'PT_M', 'PT_NC'], skiprows=1)

survivalAnalysis = pd.read_csv('Risultati/survivalAnalysis.csv', sep='|',names=['CVE', 'Product', 'NumCommit', 'NumGiorni'], skiprows=1)

when=pd.read_csv("Risultati/risWhen.csv",sep="|",names=['CVE', 'Product', 'Min', 'Max', 'Mean', 'Median', 'Variance', ' Standard deviation'])


#print(survivalAnalysis.loc[0][1])


sa={}
typecommit={}
workingOnRelease={}
projectStartup={}
projectTenure={}
workload={}
numcommit={}
numgiorni={}
whenForCwe={}

for index,rowWhy in why.iterrows():
    print(index)
    for indexData, rowData in data.iterrows():
          if(rowWhy[0]==rowData[0]):

            if rowData[2] in typecommit:
              valori=typecommit[rowData[2]]
              valori[0]=  valori[0]+rowWhy[2]
              valori[1] = valori[1] + rowWhy[3]
              valori[2] = valori[2] + rowWhy[4]
              valori[3] = valori[3] + rowWhy[5]
              typecommit[rowData[2]]=valori
            else:
              typecommit[rowData[2]]=[rowWhy[2],rowWhy[3],rowWhy[4],rowWhy[5]]

            if rowData[2] in projectStartup:
              valori=projectStartup[rowData[2]]
              valori[0]=  valori[0]+rowWhy[10]
              valori[1] = valori[1] + rowWhy[11]
              valori[2] = valori[2] + rowWhy[12]
              valori[3] = valori[3] + rowWhy[13]
              projectStartup[rowData[2]]=valori

            else:
              projectStartup[rowData[2]] = [rowWhy[10], rowWhy[11], rowWhy[12], rowWhy[13]]

            if rowData[2] in workingOnRelease:
              valori=workingOnRelease[rowData[2]]
              valori[0]=  valori[0]+rowWhy[6]
              valori[1] = valori[1] + rowWhy[7]
              valori[2] = valori[2] + rowWhy[8]
              valori[3] = valori[3] + rowWhy[9]
              workingOnRelease[rowData[2]]=valori
            else:
                workingOnRelease[rowData[2]] = [rowWhy[6], rowWhy[7], rowWhy[8], rowWhy[9]]

            if rowData[2] in projectTenure:
                valori = projectTenure[rowData[2]]
                valori[0] = valori[0] + rowWhy[17]
                valori[1] = valori[1] + rowWhy[18]
                valori[2] = valori[2] + rowWhy[19]

                projectTenure[rowData[2]] = valori
            else:
                projectTenure[rowData[2]] = [rowWhy[17], rowWhy[18], rowWhy[19]]

            if rowData[2] in workload:
              valori=workload[rowData[2]]
              valori[0]=  valori[0]+rowWhy[14]
              valori[1] = valori[1] + rowWhy[15]
              valori[2] = valori[2] + rowWhy[16]
              workload[rowData[2]] = valori
            else:
              workload[rowData[2]] = [rowWhy[14], rowWhy[15], rowWhy[16]]

            '''if rowData[2] in sa:
              valori=sa[rowData[2]]
              valori[0]=  valori[0]+survivalAnalysis.loc[index][2]
              valori[1] = valori[1]+survivalAnalysis.loc[index][3]
              sa[rowData[2]]=valori
            else:
              sa[rowData[2]] = [survivalAnalysis.loc[index][2], survivalAnalysis.loc[index][3]]'''''

            if rowData[2] in numcommit:
              valori=numcommit[rowData[2]]
              valori.append(survivalAnalysis.loc[index][2])
              numcommit[rowData[2]]=valori
            else:
              if type(rowData[2]) is not str:
                    x = float(rowData[2])
                    if math.isnan(x):
                        rowData[2] = "CWE-Other"
              numcommit[rowData[2]] = [survivalAnalysis.loc[index][2]]

            if rowData[2] in numgiorni:
              valori=numgiorni[rowData[2]]
              valori.append(survivalAnalysis.loc[index][3])
              numgiorni[rowData[2]]=valori
            else:
              if type(rowData[2]) is not str:
                  x=float(rowData[2])
                  if math.isnan(x):
                    rowData[2]="CWE-Other"
              numgiorni[rowData[2]] = [survivalAnalysis.loc[index][3]]




            break

'''for row in when.iterrows():
    for indexData, rowData in data.iterrows():
        if row[0]==rowData[0]:
            if rowData[2] in whenForCwe:
              valori=whenForCwe[rowData[2]]
            else:
                whenForCwe[rowData[2]]'''


data=[]
label=[]

i=0
count=0
for k,v in numcommit.items():
    i=i+1
    print(i)
    if i < 5:
        data.append(v)
        label.append(k)
    else :
        if i%5==0:
            print("show")
            print(v)
            data.append(v)
            label.append(k)
            print(label)
            plt.boxplot(data)
            plt.xticks([1,2,3,4,5],label)
            plt.xlabel("categories")
            plt.ylabel("numbers of commits")

            count = count + 1
            plt.savefig("boxplot/numCommit"+str(count)+".png")
            plt.show()

            data=[]
            label=[]
        else:

                data.append(v)
                label.append(k)


data=[]
label=[]
count=0
i=0
for k,v in numgiorni.items():
    i=i+1
    print(i)
    if i < 5:
        data.append(v)
        label.append(k)
    else :
        if i%5==0:
            print("show")
            print(v)
            data.append(v)
            label.append(k)
            print(label)
            plt.boxplot(data)
            plt.xticks([1,2,3,4,5],label)
            plt.xlabel("categories")
            plt.ylabel("numbers of days")

            count = count + 1
            plt.savefig("boxplot/numDays" + str(count) + ".png")
            plt.show()
            data=[]
            label=[]
        else:

                data.append(v)
                label.append(k)

   #plt.boxplot(v,positions=[1,2])
   #fig=plt.figure()
   #fig.savefig("prova.png")
   #plt.show()
   #break'''



typecommitDf=pd.DataFrame(data=typecommit)
workingOnReleaseDf=pd.DataFrame(data=workingOnRelease)
workloadDf=pd.DataFrame(data=workload)
projectTenureDf=pd.DataFrame(data=projectTenure)
projectStartupDf=pd.DataFrame(data=projectStartup)

#saDf=pd.DataFrame(data=numcommit)

typecommitDf.T.to_csv("Risultati/commitGoal.csv",sep="|")
workingOnReleaseDf.T.to_csv("Risultati/workingOnRelease.csv",sep="|")
workloadDf.T.to_csv("Risultati/workload.csv",sep="|")
projectTenureDf.T.to_csv("Risultati/projectTenure.csv",sep="|")
projectStartupDf.T.to_csv("Risultati/projectStartup.csv",sep="|")
#saDf.T.to_csv("Risultati/survivalAnalysisForCWE.csv",sep="|")