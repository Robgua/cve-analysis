cwe|name|count|howRemoved
CWE-400|Uncontrolled Resource Consumption (Resource Exhaustion)|1|control over a very long list is added to prevent an excessively high size from being set arbitrarily and leading to dos and consumption attacks of the cpu 
CWE-78|Improper Neutralization of Special Elements used in an OS Command (OS Command Injection)|2|the metacharacters of the filename are replaced to avoid that inside them there are shell commands ;to avoid csv injection cells starting with characters that could be malicious are preceded by 'mark 
CWE-415|Double Free|4|the security context is prevented from being eliminated following a call error ;the return value of a function that causes denial of service is modified ;added a static function that checks the width and height to see if they are too large ;check that the directory is not null for all error cases for which a label has also been added 
CWE-79|Improper Neutralization of Input During Web Page Generation (Cross-site Scripting)|65|"the escapeHtml function is added to the line to prevent HTML code being injected into a table name ;the filename of uploaded images is sanitized to avoid web injection ;the text is sanitized to avoid web injection ;the text is sanitized to avoid web injection ;the escape function is added for the url to avoid code injection ;checks are carried out on the validity of the input to avoid web injection ;only correct urls (starting with http: // https: // or /) are accepted to avoid web injection ;added htmlspecialcharaters function to avoid web injection ;replaced html function with text to avoid web injection ;added function htmlspecialchars web injection ;strips url to solve xss vulnerability ;htmlspecialchars to resolve xss vulnerability ; ""the text is split with"" ""via"" ""and join with"" "" injection "";added outputProtected function to avoid web injection ;the default svg upload is deleted ;html escape to avoid web injection ; ""check on the names of the organizations that contain"" ""js"" ""inside them"" ;htmlescape added to avoid XSS ;htlm escape for XSS ;fix xss in multiselect ;the database names are no longer passed as html ;all <a> targets are set to blank ;html escape for xss ;various techniques (6) to avoid XSS (described in detail in the fix commit) ;added HTML escape to avoid XSS ;added regular expression and replace to avoid xss ;added sanitization on message details for banking transactions, and validation for sending money ;htmlspecialchars to delete xss ;html escape in multivalue fields ;added autoescaping to avoid web injection ;uri manipulations to prevent xss ;htlm escape to avoid xss ;added outputprotected function to avoid xss ;escape and other controls to avoid xss ;added filter to avoid xss ;text sanitization to avoid xss ;htlmspecialchars to avoid xss ;check that the database names are not put as html ;added htlm specialchars to avoid xss ;Only basic display image attachments in the browser to avoid XSS ;Fixed the Asset pages JSPs to handle ACL filtering ;user input sync by htmlentities to avoid xss ;invalid custom sessions are ignored ;added strip to invalid names to prevent xss ;added check if the html code starts with '<' and not contained within the string ;sinitization of user input via htmlentities to avoid xss ;htmlescape added to avoid xss ;Prevent users to upload HTML as attachments ;escapeHTML to avoid xss ;the database names are not entered as html ;sanitation to avoid web or html injection ;that the text is escaped to the point where it is fed into the javascript to avoid web injection ;Sanitize user input with htmlentities to avoid xss ;added more filters to the data;increases security measures to avoid bypassing access restrictions;Added missing sanitizing to avoid xss;several security fix;sanitized the value of the view_type parameter before being displayed as a hidden input.;added stripHTML to avoid xss;Don't use raw output in timelog;added htmlEncode in the path;Fix possible vuln setting client lang pref;Escape closeText option before passing it to button;Hardening sanitization technique in Flash;added htmlspecialchars to avoid xss"
CWE-190|Integer Overflow or Wraparound|13|a buffer size check is added as this caused an integer overflow ;check to prevent integer overflow ;check if the size is too large to avoid overflow ;check on the size of the buffer to avoid integer overflow ;malloc is moved to a separate line to avoid integer overflow ;avoids that ids are negative through convert int ;size control to avoid integer overflow ;check to prevent integer overflow ;cast to size_t before multiplication to prevent buffer overflow and integer overflow ;For overflow safety images that won't fit in 32-bi ;check size to integer overflow;fix idx can be negative after uint convert to int;Add integer overflow check for content-length
CWE-264|Permissions, Privileges, and Access Control|15|the re-initialization of the function is disabled ;a check is added to prevent authenticated users from accessing the project link through which they could delete it ;check that authentication was successful before unlocking the session ;control over escape directories ;security measures are increased so as not to bypass access restrictions ;removed the visible ids from the forms ;inserted check for authenticated users with the bug threshold report related to the target project and not to the current project ;added permission check to delete images ;ids are not displayed in form ;added check that the data bytes are not zero ;findmnt is used as output instead of mount, and the use of n as a separator is forced ;a check is added to prevent authenticated users from accessing the project link through which they could delete it ;do not expose id in form ;Disable ACPI table override if securelevel is set ;disable Unix-domain socket forwarding when privsep is disabled
CWE-119|Improper Restriction of Operations within the Bounds of a Memory Buffer|34|"replaces the buffer size from unsigned to off_t and the check is added if the buffer is too small for the data ;control over the length of the buffer is added to avoid over-reading of the buffer in various functions ;a structure is not allowed to be free in the interval between a ChangeCipherSpec message and a Finished message ;buffer cut control to avoid overflow ;the incorrect types of characters of the data that would have caused stack-based buffer underflows and out-of-bounds are replaced ;is replaced by a so-called integer type that causes heap based buffer ;modified buffer size which was too small in some cases ;control to avoid overflow on array capacity ;control over the alias del phar ;control size to avoid over read buffer ;check size buffer and function malloc to avoid buffer overflow and invalid memory allocation ;control on the framebuffer to avoid out of bounds array access ;added check on reading before the buffer starts ;the complete pathname is passed to the callbacks ;check on the length of the sprintf input variable to avoid overflow ;check lenght field to avoid out-of-bounds reads ;check on string comparison to avoid buffer over-read ;check lenght to avoid buffer overflow ;control added if client is master ;added check to avoid over read buffer ;added control on the parameter format ; ""is deleted"" ""+2"" ""inside the print to avoid buffer over read"" ;check on the sign of the packet length which must not be negative ;If the protocol type isn't ETHERTYPE_IP or ETHERTYPE_TRAIL, or if the protocol address length isn't 4, don't print the address as an IPv4 address ;check image width to avoid ;check size to avoid heap-buffer-overflow ;Ensure image extent does not exceed maximum to avoid heap based buffer overflow ;In each kadmind server stub, initialize the client_name and server_name variables, and release them in the cleanup handler, Also make sure to free the prime_arg variables in rename_principal_2_svc () ;Do some random sanity checking for stratum message parsing;check size to avoid buffer overflow;fix size to avoid write heap buffer overflow;Cast arguments to <ctype.h> functions to unsigned char;check that BitsPerSample != 8 to avoid heap based overflow;Make eocd checks more consistent between zip and zip64 cases"
CWE-200|Information Exposure|13|the escape function is added to the input to avoid sql injection ;the private key is hidden by a squaring operation ;control on the host to prevent the port from being accessible from all interfaces on the web ;check to avoid accessing files on a system ;saving for disabled users was delayed until after the package containing the request was parried ;correct an improver substring check when exporting a pad id ;check that no wrong permissions are assigned when dbshell is created ;check if the configuration file exists ;updated readme and install files with DNDEBUG definition ;check if the configuration file exists ;strengthened permissions to access files ;check that not all file path is detected in an error message ;Switch from rand to mt_rand
CWE-22|Improper Limitation of a Pathname to a Restricted Directory (Path Traversal)|10|I am eliminating path separators in the minion id to avoid false authentications ;the uri path is normalized to avoid reading files through a particular sequence of characters (... / ... / ...) ;fix broken GPU detection code ;check on file and backtopage parameters to avoid arbitrarily executing file or code ;the internal samba share code is deleted ;the file path is normalized by the AssetHelper function ;zip file paths are normalized ;synitization EC2 manifest and image tarballs ;Don't let web skin name ../../../../ access  outside of usual skins directories;add osc_esc_html to file parameter
CWE-352|Cross-Site Request Forgery (CSRF)|12|cross site request forgery token is added to prevent arbitrary users from authenticating ;the validation of the previously encouraged form is modified ;added CSRF protection cross site request forgery ;added AngularJS XSRF support ;control to avoid CSRF in the setup process ;check to avoid CRSF in themes not installed ;added a single request token to avoid CSRF via download urls ;is installed / updated shiny updatee v2 ;origin matching must come at str end;all 36 files have been deleted;check session parameter to avoid CSRF;adding pwg_token on permalink & cat_options
CWE-347|Improper Verification of Cryptographic Signature|1|the verification sign is modified so that it is based not only on the length but also on the type 
CWE-94|Improper Control of Generation of Code (Code Injection)|7|the where clause is modified to avoid code injection ;only the delimiter not present in the search expressions are allowed to avoid the introduction of php code ;the extraction of shared libraries is simplified, in particular a control is added when the paths of custom libraries are not specified, via which could execute java code by overwriting a jar file in temporary files. ;the function yaml.safe_load () and tomohlr is added ;added base64 encoding to avoid code injection ;Rejecting htaccess ;Remove eval statement
CWE-191|Integer Underflow (Wrap or Wraparound)|3|a buffer size check is placed to avoid buffer overflow ;size control to avoid buffer overflow ;check size to avoid integer overflow 
CWE-90|Improper Neutralization of Special Elements used in an LDAP Query (LDAP Injection)|1|the input is sanitized 
CWE-287|Improper Authentication|3|changes are made to prevent users with read access from modifying and deleting from storage or corrupting images ;enhanced signature security ;added deprecated IP check 
CWE-125|Out-of-bounds Read|15|distance control to avoid out of bound read ;size buffer check for heap based buffer overflow ;data control to avoid out of bound read ;check to avoid out of bound array ;size control to avoid out of bound read ;size control to avoid overflow ;eliminated checking and launching the exception CorruptImageError ;size control to avoid out of bound read ;check size to avoid out of bounds read ;Fix parser rule for 'backof' and 'frontof' ;Check for invalid input in encrypted buffers ;check the lenght value;Add missing returns;Rewrite reading pixel values;Fixed invalid memory access bugs when decoding JPEG Exif data
CWE-20|Improper Input Validation|24|removes tags from strings when the json comes from unknown sources to avoid code injection ;empty filenames are considered errors ;removes tags from strings when the json comes from unknown sources to avoid code injection ;the text of a message shared via xmpp is now added only if draft box is empty ;check on the sign of the packet length which must not be negative ;deleted control on variable $ name ;the registration method is canceled ;added check that refuses the identity if it results in the cross folder ;improves security when downloading from pypi ;strengthened control over the validity of the inputs ;the format_install_param function that replaces is added ;Do not schedule retransmits for inI1outR1 packets (prevent DDOS) Do schedule retransmits for XAUTH packets ;added to global lookup param and cfg option to allow unsafe return values, even in the jinja2 environment ;the internal samba share code is deleted ;added control on the parameter url back ;fix-too-many-semicolons ;add the modulus 0xf to avoid running off the end of the table.;Fix incorrect bounds check for sector count ;control on uuid in path info to avoid injection commands;Changed to using carbon module delegate methods;Fix default value for trustAllHosts on iOS;don't echo query params on invalid requests to redirect URI;Convert ff_amf_get_field_value() to bytestream2;Constrain algorithm name to be of form ABC123
CWE-89|Improper Neutralization of Special Elements used in an SQL Command (SQL Injection)|14|a function is added that decodes a url only if it contains no code inside it ;correct some insert sql error that cause sql injection ;a piece of code is deleted ;added filter to avoid sql injection ;invert xssClean and stripTags ;check search parameter to avoid sql injection ;count if the variable is set to avoid sql injection ;all sql queries are parameterized ;Refactor activity_user to remove possible SQL injection points. ;added safe_html and escape functions to avoid sql injection ;check status parameter to avoid sql injection;fix sql injection security vulnerability which failed to account for sef urls adequately;check the order parameter to avoid sql injection;added functions orderby e valid_order_param
CWE-787|Out-of-bounds Write|5|buffer size check to avoid heap based buffer overflow ;size control for an out of bounds write ;modified the function that acquires the information of an image to avoid writing out of bounds through a craft psd file ;check index loop to avoid out of bounds write ;check that octal value are smaller than 256 
CWE-284|Improper Access Control|6|replaced ../utils/correct-mkdir.js with mkdirp to prevent users of the etc and usr folders from bypassing the file permissions ;the system calls that were used to rename files on the OS host are removed ;added IPv6 hop limit validation ;added method checkMemoryOverflow to avoid denial of service;security fix to prevent possible hacking by moving security checks earlier in the install code;Improve multi-recipient/multi-sig handling
CWE-611|Improper Restriction of XML External Entity Reference (XXE)|2|the SAML XML request and response parsing is modified to avoid XXE attacks ;check sml or xml response or request to avoid XXE 
CWE-369|Divide By Zero|1|eliminated division by zero 
CWE-189|Numeric Errors|5|buffer size check to avoid overflow ;control size to avoid heap based buffer overflow ;check dimension value to avoid heap-based buffer overflow ;Prevent 1-byte underread of input buffers if an odd-sized data block just before an uncompressed block header ;Remove offset pointer optimization in inftrees.c
CWE-Other||6|a function is modified to avoid eliminating the constancy leaving the caller with a pointer without knowing if it is valid, the context is then marked as terminated instead of deleting it ;RPC crashes are fixed on windows ;in case a query does not return results, its status is changed from success to KRB5_KDB_NOENTRY ;added check if password is equal to null ;check metacharacters in the username and password fields;Added some missing sanity checks on the data in a SIZ marker segment.
CWE-399|Resource Management Errors|7|a change is made to prevent a loop from going into a loop ;introduces a new type of splitting algorithm ;arbitrarily limits the depth of the data structure represented by the direct objects ;removed the loop that kept reading the same offset ;recursion performed on! True instead of only true and false to avoid infinite recursion and stack overflow ;fix infinite loop with eof ;Limit string printing to 100 chars
CWE-310|Cryptographic Issues|4|the security of a certificate is strengthened ;avoids the use of DH certificates without a verification message ;added hash function to avoid denial of service via json data handcrafted ;fix the calculation the square of a BIGNUM 
CWE-59|Improper Link Resolution Before File Access (Link Following)|4|control on symlinks in pathnames in temporary data ;/ run / lock / lxc is replaced with / run / lxc / lock to prevent users without permission to use lxc to create arbitrarily file on the ystem ;various changes to fix the problem in plugins ;/tmp/{prog_name} change in {prog_name} so the log file is created in the current directory instead of under /tmp.
CWE-19|Data Processing Errors|1|correct shift operation invalid 
CWE-601|URL Redirection to Untrusted Site (Open Redirect)|2|prevents redirection after sign in o sign up ;replacing flask-security login_user instead of flask-login and Replacing current_user.is_authenticated() method with property
CWE-361|Time and State|1|comparison between signatures is done bit by bit 
CWE-476|NULL Pointer Dereference|6|Clients are prevented from logging out before authentication is terminated ;pixel control via GetquantumRange ;Avoid NULL structure pointer member dereference ;fix NULL Pointer Dereference while unserialize php object;fix access to invalid address by reg->dmax value;use client.princ instead of request->client
CWE-326|Inadequate Encryption Strength|1|the new secrets are encrypted with CBC instead of ECB 
CWE-254|Security Features|2|added token check ;added file check 
CWE-295|Improper Certificate Validation|2|added handshake state validation ;Remove the client-side SSLv2 fallback. 
CWE-918|Server-Side Request Forgery (SSRF)|2|replaced escapeUriString with EscapeDataString ;replace EscapeUriString with EscapeDataString 
CWE-416|Use After Free|2|replaced malloc with calloc ;added function sized_string_dup
CWE-704|Incorrect Type Conversion or Cast|1|abort command XGROUP if the key is not a stream 
CWE-255|Credentials Management|2|added use of escapeshellcmd and avoids uploading files within queries ;delete the global settings from the request object 
CWE-502|Deserialization of Untrusted Data|2|"added TCPDF_STATIC function to check that non-serialized objects are sent in phar: // wrapper ;changes calls to YAML.load to call the whitelisted ""safe"" loader instead"
CWE-17|Code|1|added check if the buffer is of type channelBuffer 
CWE-434|Unrestricted Upload of File with Dangerous Type|1|added the check that only the uploaded html files are valid 
CWE-noinfo||1|updated some security options and change from http to https 
CWE-426|Untrusted Search Path|1|Do not treat Symbol args different to Strings in ffi_lib 
CWE-384|Session Fixation|1|SimpleSAML\Utils\Crypto returns true for different strings
